library(gameR)
install.packages("learnr")
install.packages("chess")
install.packages("rchess")
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
newgame <- Chess$new()
library(rchess)
newgame <- Chess$new()
plot(newgame)
newgame$moves()
install.packages("rmarkdown")
install.packages("shiny")
library(learnr)
knitr::opts_chunk$set(echo = TRUE)
library(rchess)
newgame <- Chess$new()
plot(newgame)
newgame$moves()
library(learnr)
knitr::opts_chunk$set(echo = TRUE, comment = "")
newgame$moves[[10]]
newgame$moves[10]
newgame$moves()[[10]]
sample(newgame$moves(),1)
library(rchess)
game <- Chess$new()
plot(game)
game$moves()
game$moves()[[10]]
sample(game$moves(),1)
game$moves()
game$moves()[[10]]
game$move("e4")
plot(game)
game$move(sample(game$moves(),1))
plot(game)
g2 <- Chess$new()
g2$move("e4")$move("e5")
plot(g2)
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc5")$move("d6")
plot(g2)
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d6")
plot(g2)
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
g2$moves()
length(g2$moves())
grep("x", g2$moves())
g2$moves()[[c(3,8,10)]]
g2$moves()[c(3,8,10)]
grep("O-O", g2$moves())
g2$moves()[32]
grep("x", g2$moves())
m <- g2$moves()[c(3,8,10,32)]
m2 <- g2$moves()[c(grep("x", g2$moves()),grep("O-O", g2$moves()))]
for(i in 1:length(m)){
g3[i] <- g2$move(m[i])
}
g3 <- c()
for(i in 1:length(m)){
g3[i] <- g2$move(m[i])
}
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
g3 <- c()
for(i in 1:length(m)){
g3[i] <- g2$move(m[i])
}
m[2]
m[[2]]
par(mfrow = c(2,2))
g3 <- c()
for(i in 1:length(m)){
g3[[i]] <- g2$move(m[i])
}
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
par(mfrow = c(2,2))
g3 <- c()
for(i in 1:length(m)){
g3[[i]] <- g2$move(m[i])
}
g3[1] <- g2$move(m[1])
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
g3[1] <- g2$move(m[1])
g3[[1]] <- g2$move(m[1])
plot(g2)
g3 <- c()
g3 <- list()
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
gx <- g2$clone()
plot(gx)
gx <- rep(g2$clone(), 4)
gx <- g2$clone(4)
g3 <- list()
for(i in 1:length(m)){
g3[i] <- g2$clone
g3[i] <- g3[i]$move(m[i])
}
g3[i] <- g3[[i]]$move(m[i])
g3 <- list()
for(i in 1:length(m)){
g3[i] <- g2$clone
g3[i] <- g3[[i]]$move(m[i])
}
g3[i] <- g2$clone
g3 <- list()
for(i in 1:length(m)){
g3[i] <- g2$clone
#g3[i] <- g3[i]$move(m[i])
}
g3 <- list()
for(i in 1:length(m)){
g3[i] <- g2$clone()
#g3[i] <- g3[i]$move(m[i])
}
gx <- listenv(g2$clone(), g2$clone())
gx <- list2env(g2$clone(), g2$clone())
g3 <- list()
for(i in 1:length(m)){
g_temp <- g2$clone()
g_temp$move(m[i])
g3[i] <- plot(g_temp)
}
g_temp <- g2$clone()
g_temp <- g2$clone()
plot(g_temp)
g_temp <- g2$clone()
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
g_temp <- g2$clone()
g_temp <- g2$clone()
plot(g_temp)
g_temp$move(m[1])
plot(g_temp)
plot(g2)
g2$reset()
plot(g2)
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
plot(g2)
g2$clear()
plot(g2)
g2 <- Chess$new()
g2$move("e4")$move("e5")$
move("Nf3")$move("Nc6")$
move("Bc4")$move("d5")
plot(g2)
g2$remove()
g2$move(m[1])
p <- plot(g2)
g2$undo()
plot(g2)
g3 <- list()
for(i in 1:length(m)){
g2$move(m[i])
g3[i] <- plot(g2)
g2$undo()
}
plot(g3[1])
g3 <- list()
for(i in 1:length(m)){
g2$move(m[i])
g3[[i]] <- plot(g2)
g2$undo()
}
plot(g3[1])
plot(g3[[1]])
g3 <- list()
g3[i] <- g2$fen()
g3 <- list()
for(i in 1:length(m)){
g2$move(m[i])
g3[i] <- g2$fen()
g2$undo()
}
rchess::ggchessboard(g3[1])
g3[1]
rchess::ggchessboard(g3[[1]])
library(learnr)
knitr::opts_chunk$set(echo = TRUE, comment = "")
fen_to_matrix <- function(fen) {
pieces <- strsplit(fen, ' ')[[1]][1]
rows   <- strsplit(pieces, "/")[[1]]
for (i in 1:8) {
rows <- gsub(i, paste(rep(' ', i), collapse=''), rows)
}
matrix(unlist(strsplit(rows, '')), 8, 8, byrow = TRUE, list(c(8:1), letters[1:8]))
}
create_fen_plot <- function(fen, title) {
mat <- fen_to_matrix(fen)
unicode <- c(
` ` = '',
P='\u2659', R='\u2656', N='\u2658', B='\u2657', Q='\u2655', K='\u2654', # White
p='\u265F', r='\u265C', n='\u265E', b='\u265D', q='\u265B', k='\u265A'  # Black
)
board <- expand.grid(x=1:8, y=1:8) %>%
mutate(
tilecol = (x+y)%%2 == 1,
piece  = as.vector(t(mat[8:1,])),
colour = piece %in% letters,
unicode = unicode[piece]
)
ggplot(board, aes(x, y)) +
geom_tile(aes(fill = tilecol), colour = 'black', show.legend = FALSE) +
geom_text(aes(label = unicode), family="Arial Unicode MS", size = 8) +
coord_equal() +
theme_void() +
scale_fill_manual(values = c('#D2B48C', '#F5F5DC'))  +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
}
create_fen_plot(g3[1],"")
create_fen_plot(g3[[1]],"")
library(tidyverse)
create_fen_plot(g3[[1]],"")
create_fen_plot(g3[[1]],m[1])
install.packages("gridExtra")
library(gridExtra)
#gx <- g2$clone()
#g2$move(m[1])
#p <- plot(g2)
#g2$undo()
g3 <- list()
for(i in 1:length(m)){
g2$move(m[i])
g3[i] <- g2$fen()
g2$undo()
}
grid.arrange(create_fen_plot(g3[[1]],m[1]),
create_fen_plot(g3[[2]],m[2]),
create_fen_plot(g3[[3]],m[3]),
create_fen_plot(g3[[4]],m[4]),
ncol = 2)
game <- chess$new()
game <- Chess$new()
game$game_over()
if(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
plot(game)
game <- Chess$new()
while(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
plot(game)
game$pgn()
game$summary()
game$summary("Number of moves")
game$summary()$Board
game$summary()[1]
game$plot()
game$history()
game$history_detail()
game$history()
length(game$history()/2)
length(game$history())/2
game <- Chess$new()
pgns <- list()
for(i in 1:100){
while(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
pgns[[i]] <- game$pgn()
}
game <- Chess$new()
pgns <- list()
moves <- list()
for(i in 1:100){
while(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
pgns[[i]] <- game$pgn()
moves[[i]] <- game$history()
}
game <- Chess$new()
pgns <- list()
moves <- list()
for(i in 1:100){
while(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
game$reset()
pgns[[i]] <- game$pgn()
moves[[i]] <- game$history()
}
game <- Chess$new()
pgns <- list()
moves <- list()
for(i in 1:100){
while(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
pgns[[i]] <- game$pgn()
moves[[i]] <- game$history()
game$reset()
}
n_moves <- list()
for(i in 1:length(moves)){
n_moves[i] <- length(moves[i])/2
}
n_moves <- list()
for(i in 1:length(moves)){
n_moves[i] <- length(moves[[i]])/2
}
lapply(length, moves)
lapply(moves, length)
x <- lapply(moves, length)
x <- unlist(lapply(moves, length))
hist(x)
x <- unlist(lapply(moves, length))/2
hist(x)
boxplot(x)
hist(x)
game <- Chess$new()
while(game$game_over() == FALSE){
game$move(sample(game$moves(), 1))
}
plot(game)
game$header()
game$summary()
game$in_draw()
game$in_stalemate()
game$init_ct()
game$validate_fen()
chess::is_game_over(game)
chess::result()
?chess::result
chess::result(game$fen())
game$fen()
chess::game(fen = game$fen())
chess::install_chess()
Y
chess::game(fen = game$fen())
